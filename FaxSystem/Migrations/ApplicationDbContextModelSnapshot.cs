// <auto-generated />
using System;
using FaxSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FaxSystem.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FaxSystem.Models.Agency", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("AGENCIES");
                });

            modelBuilder.Entity("FaxSystem.Models.Branch", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("BRANCHES");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "فرع النظم"
                        });
                });

            modelBuilder.Entity("FaxSystem.Models.BranchFaxRecivers", b =>
                {
                    b.Property<int>("BranchID")
                        .HasColumnType("int");

                    b.Property<int>("FaxID")
                        .HasColumnType("int");

                    b.HasKey("BranchID", "FaxID");

                    b.HasIndex("FaxID");

                    b.ToTable("BRANCH_FAX_RECIVER");
                });

            modelBuilder.Entity("FaxSystem.Models.Decision", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool>("DecisionCheck")
                        .HasColumnType("bit");

                    b.Property<string>("DecisionText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DecisionVoice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opinion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpinionVoice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PersonalReview")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.ToTable("DECISIONS");
                });

            modelBuilder.Entity("FaxSystem.Models.Fax", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<int?>("DecisionID")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SenderAgencyID")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("suspend")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.HasKey("ID");

                    b.HasIndex("DecisionID");

                    b.HasIndex("RegistrationNum")
                        .IsUnique();

                    b.HasIndex("SenderAgencyID");

                    b.ToTable("FAXES");
                });

            modelBuilder.Entity("FaxSystem.Models.FaxBetweenBranches", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<int?>("DecisionID")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SenderBranchID")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("suspend")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("ID");

                    b.HasIndex("DecisionID");

                    b.HasIndex("RegistrationNum")
                        .IsUnique();

                    b.HasIndex("SenderBranchID");

                    b.ToTable("FAXBRANCHES");
                });

            modelBuilder.Entity("FaxSystem.Models.FaxLink", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("FaxBetweenBranchesID")
                        .HasColumnType("int");

                    b.Property<int?>("FaxId")
                        .HasColumnType("int");

                    b.Property<string>("link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("FaxBetweenBranchesID");

                    b.HasIndex("FaxId");

                    b.ToTable("FaxLinks");
                });

            modelBuilder.Entity("FaxSystem.Models.FaxReciver", b =>
                {
                    b.Property<int>("BranchID")
                        .HasColumnType("int");

                    b.Property<int>("FaxID")
                        .HasColumnType("int");

                    b.HasKey("BranchID", "FaxID");

                    b.HasIndex("FaxID");

                    b.ToTable("FAXERECIVERS");
                });

            modelBuilder.Entity("FaxSystem.Models.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActionDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActionTakerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LOGS");
                });

            modelBuilder.Entity("FaxSystem.Models.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleID"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleID");

                    b.ToTable("ROLES");

                    b.HasData(
                        new
                        {
                            RoleID = 1,
                            RoleName = "المشرف العام"
                        },
                        new
                        {
                            RoleID = 2,
                            RoleName = "صلاحية رئيس الفرع"
                        },
                        new
                        {
                            RoleID = 3,
                            RoleName = "صلاحية المتابعة"
                        },
                        new
                        {
                            RoleID = 4,
                            RoleName = "صلاحية السيد المديرر"
                        },
                        new
                        {
                            RoleID = 5,
                            RoleName = "صلاحية نائب المدير"
                        },
                        new
                        {
                            RoleID = 6,
                            RoleName = "رئيس فرع المتابعة"
                        },
                        new
                        {
                            RoleID = 1006,
                            RoleName = "صلاحية التكويد"
                        });
                });

            modelBuilder.Entity("FaxSystem.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("BranchID")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("num_read_faxes")
                        .HasColumnType("int");

                    b.Property<int>("num_read_faxes_branches")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("BranchID");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("USERS");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            BranchID = 1,
                            Password = "Hossam@1983",
                            UserName = "admin",
                            numreadfaxes = 0,
                            numreadfaxesbranches = 0
                        });
                });

            modelBuilder.Entity("FaxSystem.Models.UserRoles", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("USER_ROLES");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("FaxSystem.Models.BranchFaxRecivers", b =>
                {
                    b.HasOne("FaxSystem.Models.Branch", "branch")
                        .WithMany("BranchFaxRecivers")
                        .HasForeignKey("BranchID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FaxSystem.Models.FaxBetweenBranches", "fax")
                        .WithMany("BranchFaxRecivers")
                        .HasForeignKey("FaxID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("branch");

                    b.Navigation("fax");
                });

            modelBuilder.Entity("FaxSystem.Models.Fax", b =>
                {
                    b.HasOne("FaxSystem.Models.Decision", "decision")
                        .WithMany()
                        .HasForeignKey("DecisionID");

                    b.HasOne("FaxSystem.Models.Agency", "senderAgency")
                        .WithMany("SendFaxes")
                        .HasForeignKey("SenderAgencyID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("decision");

                    b.Navigation("senderAgency");
                });

            modelBuilder.Entity("FaxSystem.Models.FaxBetweenBranches", b =>
                {
                    b.HasOne("FaxSystem.Models.Decision", "decision")
                        .WithMany()
                        .HasForeignKey("DecisionID");

                    b.HasOne("FaxSystem.Models.Branch", "senderBranch")
                        .WithMany("BranchSendFaxes")
                        .HasForeignKey("SenderBranchID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("decision");

                    b.Navigation("senderBranch");
                });

            modelBuilder.Entity("FaxSystem.Models.FaxLink", b =>
                {
                    b.HasOne("FaxSystem.Models.FaxBetweenBranches", null)
                        .WithMany("FaxLinks")
                        .HasForeignKey("FaxBetweenBranchesID");

                    b.HasOne("FaxSystem.Models.Fax", "Fax")
                        .WithMany("FaxLinks")
                        .HasForeignKey("FaxId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Fax");
                });

            modelBuilder.Entity("FaxSystem.Models.FaxReciver", b =>
                {
                    b.HasOne("FaxSystem.Models.Branch", "branch")
                        .WithMany("FaxRecivers")
                        .HasForeignKey("BranchID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FaxSystem.Models.Fax", "fax")
                        .WithMany("FaxRecivers")
                        .HasForeignKey("FaxID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("branch");

                    b.Navigation("fax");
                });

            modelBuilder.Entity("FaxSystem.Models.User", b =>
                {
                    b.HasOne("FaxSystem.Models.Branch", "branch")
                        .WithMany("Users")
                        .HasForeignKey("BranchID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("branch");
                });

            modelBuilder.Entity("FaxSystem.Models.UserRoles", b =>
                {
                    b.HasOne("FaxSystem.Models.Role", "role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FaxSystem.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("role");

                    b.Navigation("user");
                });

            modelBuilder.Entity("FaxSystem.Models.Agency", b =>
                {
                    b.Navigation("SendFaxes");
                });

            modelBuilder.Entity("FaxSystem.Models.Branch", b =>
                {
                    b.Navigation("BranchFaxRecivers");

                    b.Navigation("BranchSendFaxes");

                    b.Navigation("FaxRecivers");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("FaxSystem.Models.Fax", b =>
                {
                    b.Navigation("FaxLinks");

                    b.Navigation("FaxRecivers");
                });

            modelBuilder.Entity("FaxSystem.Models.FaxBetweenBranches", b =>
                {
                    b.Navigation("BranchFaxRecivers");

                    b.Navigation("FaxLinks");
                });
#pragma warning restore 612, 618
        }
    }
}
